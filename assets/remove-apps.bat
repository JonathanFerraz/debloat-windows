echo Disabling Recall Feature
PowerShell -ExecutionPolicy Unrestricted -Command "Dism /Online /Disable-Feature /Featurename:Recall /NoRestart"

echo -- Uninstalling third-party apps
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'king.com.CandyCrushSaga\' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'king.com.CandyCrushSodaSaga\' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'ShazamEntertainmentLtd.Shazam\' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Flipboard.Flipboard\' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq '9E2F88E3.Twitter\' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'ClearChannelRadioDigital.iHeartRadio\' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'D5EA27B7.Duolingo-LearnLanguagesforFree\' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'AdobeSystemsIncorporated.AdobePhotoshopExpress\' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'PandoraMediaInc.29680B314EFC2\' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq '46928bounde.EclipseManager\' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'ActiproSoftwareLLC.562882FEEB491\' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"

echo -- Uninstalling extensions
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.HEIFImageExtension' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.VP9VideoExtensions' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.WebpImageExtension' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.HEVCVideoExtension' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.RawImageExtension' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.WebMediaExtensions' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"

echo -- Uninstalling Microsoft apps
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'MicrosoftCorporationII.MicrosoftFamily' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.OutlookForWindows' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Clipchamp.Clipchamp' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.3DBuilder' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.Microsoft3DViewer' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.BingWeather' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.BingSports' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.BingTranslator' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.BingTravel ' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.BingSearch' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.MicrosoftJournal' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.Windows.Ai.Copilot.Provider' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "if (-not (Test-Path 'SOFTWARE\Microsoft\Windows\Windows Chat')) { New-Item -Path 'SOFTWARE\Microsoft\Windows\Windows Chat' -Force | Out-Null }"
PowerShell -ExecutionPolicy Unrestricted -Command "$null = New-ItemProperty -Path 'SOFTWARE\Microsoft\Windows\Windows Chat' -Name 'ChatIcon' -Value [int]3 -PropertyType DWord -Force -ErrorAction SilentlyContinue"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.Windows.Ai.Copilot.Provider' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.Copilot' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.Copilot_8wekyb3d8bbwe' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "if (-not (Test-Path 'Software\Policies\Microsoft\Windows\CloudContent')) { New-Item -Path 'Software\Policies\Microsoft\Windows\CloudContent' -Force | Out-Null }"
PowerShell -ExecutionPolicy Unrestricted -Command "$null = New-ItemProperty -Path 'Software\Policies\Microsoft\Windows\CloudContent' -Name 'TurnOffWindowsCopilot' -Value [int]1 -PropertyType DWord -Force -ErrorAction SilentlyContinue"
PowerShell -ExecutionPolicy Unrestricted -Command "if (-not (Test-Path 'Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced')) { New-Item -Path 'Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced' -Force | Out-Null }"
PowerShell -ExecutionPolicy Unrestricted -Command "$null = New-ItemProperty -Path 'Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced' -Name 'ShowCopilotButton' -Value [int]0 -PropertyType DWord -Force -ErrorAction SilentlyContinue"
PowerShell -ExecutionPolicy Unrestricted -Command "if (-not (Test-Path 'Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced')) { New-Item -Path 'Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced' -Force | Out-Null }"
PowerShell -ExecutionPolicy Unrestricted -Command "$null = New-ItemProperty -Path 'Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced' -Name 'HideNewOutlookToggle' -Value [int]0 -PropertyType DWord -Force -ErrorAction SilentlyContinue"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-WindowsCapability -Online | Where-Object { $_.Name -like 'App.Support.QuickAssist*' } | Remove-WindowsCapability -Online"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.QuickAssist' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.PowerAutomateDesktop' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.ZuneMusic' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.ZuneVideo' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.WindowsMeetNow' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "if (-not (Test-Path 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer')) { New-Item -Path 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer' -Force | Out-Null };
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.Paint' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.XboxGameBar' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-WindowsCapability -Online | Where-Object { $_.Name -like 'Browser.InternetExplorer*' } | Remove-WindowsCapability -Online"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-WindowsCapability -Online | Where-Object { $_.Name -like 'MathRecognizer*' } | Remove-WindowsCapability -Online"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-WindowsCapability -Online | Where-Object { $_.Name -like 'OpenSSH.Client*' } | Remove-WindowsCapability -Online"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-WindowsCapability -Online | Where-Object { $_.Name -like 'Microsoft.Windows.MSPaint*' } | Remove-WindowsCapability -Online"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-WindowsCapability -Online | Where-Object { $_.Name -like 'Microsoft.Windows.PowerShell.ISE*' } | Remove-WindowsCapability -Online"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-WindowsCapability -Online | Where-Object { $_.Name -like 'App.StepsRecorder*' } | Remove-WindowsCapability -Online"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-WindowsCapability -Online | Where-Object { $_.Name -like 'Media.WindowsMediaPlayer*' } | Remove-WindowsCapability -Online"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-WindowsCapability -Online | Where-Object { $_.Name -like 'Microsoft.Windows.WordPad*' } | Remove-WindowsCapability -Online"
PowerShell -ExecutionPolicy Unrestricted -Command "Set-ItemProperty -Path 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Search' -Name 'CortanaConsent' -Value 0 -Force"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.GetHelp' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.BingFinance' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.MicrosoftOfficeHub' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.WindowsTerminal' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.BingNews' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.News' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.MicrosoftPowerBIForWindows' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.Office.OneNote' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.Office.Sway' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.WindowsPhone' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.CommsPhone' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.YourPhone' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.Getstarted' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.549981C3F5F10' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.Windows.DevHome' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.Messaging' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.NetworkSpeedTest' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.WindowsSoundRecorder' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.MixedReality.Portal' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.WindowsFeedbackHub' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.WindowsAlarms' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.WindowsCamera' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.MSPaint' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.WindowsMaps' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.MinecraftUWP' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.People' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.Wallet' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.Print3D' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.OneConnect' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.MicrosoftSolitaireCollection' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.MicrosoftStickyNotes' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'microsoft.windowscommunicationsapps' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.SkypeApp' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.GroupMe10' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'MSTeams' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage -AllUsers | Where-Object { $_.Name -eq 'Microsoft.Todos' } | ForEach-Object { Remove-AppxPackage -Package $_.PackageFullName -AllUsers -ErrorAction SilentlyContinue }"
PowerShell -ExecutionPolicy Unrestricted -Command "Get-AppxPackage *WebExperience* | Remove-AppxPackage"
